Day 1 - Session 1

[From Slide - 1_0_NoSQL.pptx]
1. Need for NoSQL (Example of different actions one do in facebook)
2. Catalog of NoSQL databases - Key/Value, Columnar, Document, Graph
2.a Pros and cons of each NoSQL category, when to use and when not to use
[From document - 1_21_ColumnDatabaseVsRowDatabase.pdf]
2.b Columnar database vs Row-Relational DB

[From Slide - 1_1_DocumentDatabases.ppt]
3. Document database in detail

[From Slide - 2_OrientDB.pptx]
4. OrientDB introduction 
5. Setup 

--Connect to server
connect remote:localhost:2424 root root

--Create db from console
--Alternatively, Create db from login screen of web console
create database remote:localhost:2424/testdb root root plocal DOCUMENT;

-- Connect db from console
connect remote:localhost:2424/northwind root root

create class region
--to list classes
classes
--to list clusters
clusters
insert into region (name, country) values ('Bangalore', 'India')
select from region
--create properties for constraints
create property region.name string
 
-- type conversion during insert
insert into region (name, country) values (123, 'India')

-- type conversion error due to wrong format
create property region.rank integer
--following will throw an error
insert into region (name, country,zipcode,rank) values ('Bangalore', 'India','560047','gldfgjerihlj')

-- to show list of properties in a class
desc region

-- when you add a property to class when documents in that class already have a value for the same field name
-- orientdb checks if that values present in the documents for the field conform to the schema. Throws an error if it doesnt
create property region.country string

-- to create an index on a property in a class 
-- remember this can be done only on a property defined on a class 
-- so schema is required to create an index
create index region.country NOTUNIQUE

-- to delete a property not defined in schema
update Customer remove livesin  

-- to delete a property defined in schema. This will not delete property from documents
drop property region.rank

-- delete records / documents based on record id. # prefix is optional
delete from region where @RID=#12:2 or @RID=12:3

--add field to existing documents
update Customer set reg_name = 'Bangalore'

--if you have imported records from database where foreign key values are already present in rows, then create a link based on these values. following command will create a new property "livesin" of type LINK
create link livesin type link from Customer.reg_name to region.name

--to find references to a record
select expand(referredBy) from (find references #12:0)

--Instead of creating a link based on existing values, create a link in the schema
create property Customer.region LINK region

--update document with link property
update Customer set region=#12:0

--to create an embedded property (instead of a link) in a class
--You should already have the class called Address
--Use EMBEDDEDLIST in case customer can have multiple address
create property Customer.address EMBEDDED Address

--Insert document 
insert into Customer set name='British Telecom', reg_name='Calcutta', address={line1:'fsgrg',city:'Erode',zipcode:560047}
-----------------------------------------------------------------------------------------
--- Northwind database
create class region
create class customer
create class country
create class employee
create class order
create class item
create class product
create class category

create property region.code string
create property region.details string

create property country.code string
create property country.name string

create property customer.id string
create property customer.name string
create property customer.livesInRegion link region
create property customer.livesInCountry link country

create property employee.id string
create property employee.name string
create property employee.reportsTo link employee

create property order.orderNo string
create property order.orderDate date

create property category.id string
create property category.name string

create property product.id string
create property product.name string
create property product.inCategory link category
create property product.price float

create property item.quantity integer
create property item.sno integer
create property item.is link product
create property item.price float

create property order.lineitems linkset item

insert into country set code ="IN", name="India"
insert into region set code="KA", name="Karnataka"
insert into region set code="TN", name="TamilNadu"

insert into customer set id="BT", name="BritishTelecom", livesInRegion=#9:0, livesInCountry=#11:0
insert into customer set id="TCS", name="TataCons Services", livesInRegion=#9:1, livesInCountry=#11:0

insert into employee set id="1000000", name="Krish"
insert into employee set id="1000001", name="Arun", reportsTo=#12:0
insert into employee set id="1000002", name="Ram", reportsTo=#12:0
insert into employee set id="1000003", name="Abhi"
update employee set reportsTo=(select @RID from employee where id="1000000") where id="1000003"


-----
create class region extends V
create class customer extends V
create class country extends V
create class employee extends V
create class order extends V
create class item extends V
create class product extends V
create class category extends V

create class livesInRegion extends E
create class livesInCountry extends E

create property region.code string
create property region.details string

create property country.code string
create property country.name string

create property customer.id string
create property customer.name string

insert into country set code ="IN", name="India"
insert into region set code="KA", name="Karnataka"
insert into region set code="TN", name="TamilNadu"

insert into customer set id="BT", name="BritishTelecom"
create edge livesInRegion from (select from customer where id="BT") to (select from region where code="KA") set since=2011

insert into customer set id="TCS", name="TataCons Services"
create edge livesInRegion from (select from customer where id="TCS") to (select from region where code="TN") set since=2000
create edge livesInCountry from (select from customer) to (select from country where code="IN")

create property employee.id string
create property employee.name string

create property order.orderNo string
create property order.orderDate date

create property category.id string
create property category.name string

create property product.id string
create property product.name string
create property product.price float

create property item.quantity integer
create property item.sno integer
create property item.price float

insert into employee set id="1000000", name="Krish"
insert into employee set id="1000001", name="Arun"
insert into employee set id="1000002", name="Ram"
insert into employee set id="1000003", name="Abhi"
create edge reportsTo from (select from employee where id<>"1000000") to (select from employee where id="1000000") 

create vertex category set categoryId="mobile", name="mobile phones"
create vertex category set categoryId="smartPhone", name="smart phone"

create vertex product set prodId="MOB001", name="Nokia 2210"
create vertex product set prodId="MOB002", name="Samsung"

create class inCategory extends E
create edge inCategory from (select from product where prodId="MOB001") to (select from category where categoryId="mobile") 
create edge inCategory from (select from product where prodId="MOB002") to (select from category where categoryId="smartPhone") 

create vertex item set sno=1, price=100, quantity=2
create vertex item set sno=2, price=1000, quantity=1
create class itemIs extends E
create edge itemIs from (select from item where sno=1) to (select from product where prodId="MOB001")
create edge itemIs from (select from item where sno=2) to (select from product where prodId="MOB002")

create vertex order set orderNo="M0001", orderDate="2016-03-03 00:00:00"
create class ordered extends E
create class orderDetails extends E
create class sold extends E
create edge ordered from (select from customer where id="BT") to (select from order where orderNo="M0001")
create edge orderDetails from (select from order where orderNo="M0001") to (select from item)
create edge sold from (select from employee where id="1000002") to (select from order)

--by default orientdb doesnt allow to create a property with name "id" as it internally uses Tinkerpop API which puts the constraint. one can disable it with following command.

alter database custom standardElementConstraints=false
-- you can disable it on the OrientGraph or on OrientGraphFactory setting setStandardElementConstraints(false)

Youtube reference video on OrientDB along with detailed blog
https://www.youtube.com/watch?v=X-pXqvVTK6E

TODO 
1. When the property is an array, what is the value shown in square brackets [1], [2]
2. refering to document as part of insert to link them